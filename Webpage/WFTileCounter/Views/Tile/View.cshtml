@model WFTileCounter.ModelsView.TileDetailsViewModel

@{
    ViewData["Title"] = Model.Tile.Name;
}




<h1>@Html.DisplayFor(x => x.Tile.Name)</h1>


<div class="container">
    <div class="row">

        <div class="col-md-4 mb-1 pb-1">
            <center><img src="@Url.Content(String.Format("~/img/tilesets/{0}", Model.Map.ImagePath))" alt="@Model.Map.AltText" CssClass="tooltips" class="rounded img-fluid tooltips" data-toggle="tooltip" data-placement="top" title="Map Image of @Html.DisplayFor(x=>x.Tile.Name)"></center>

        </div>

        <div class="col-md-8 border border-light">
            <div class="row">
                <div class="col-md-6 mb-1 pb-1">
                    <strong>@Html.DisplayNameFor(x => x.Tile.Name)</strong>
                </div>
                <div class="col-md-6 mb-1 pb-1">
                    <strong>@Html.DisplayNameFor(x => x.Tile.TileDetail.PopularName)</strong>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6  border-bottom border-light mb-1  pb-1">
                    @Html.DisplayFor(x => x.Tile.Name)
                </div>
                <div class="col-md-6  border-bottom border-light mb-1 pb-1">
                    @Html.DisplayFor(x => x.Tile.TileDetail.PopularName)
                </div>
            </div>
            <div class="row">
                <div class="col-md-2 border-bottom mb-1 pb-1">
                    <strong>@Html.DisplayNameFor(x => x.Tile.TileDetail.Consoles)</strong>
                </div>
                <div class="col-md-2 border-bottom mb-1 pb-1">
                    @Html.DisplayFor(x => x.Tile.TileDetail.Consoles)
                </div>
                <div class="col-md-2 border-bottom mb-1 pb-1">
                    <strong>@Html.DisplayNameFor(x => x.Tile.TileDetail.Exits)</strong>
                </div>
                <div class="col-md-2 border-bottom mb-1 pb-1">
                    @Html.DisplayFor(x => x.Tile.TileDetail.Exits)
                </div>
                <div class="col-md-2 border-bottom mb-1 pb-1">
                    <strong>@Html.DisplayNameFor(x => x.Tile.TileDetail.Lockers)</strong>
                </div>
                <div class="col-md-2 border-bottom mb-1 pb-1">
                    @Html.DisplayFor(x => x.Tile.TileDetail.Lockers)
                </div>

            </div>
            <div class="row">
                <div class="col-md-2 border-bottom mb-1 pb-1">
                    <strong>@Html.DisplayNameFor(x => x.Tile.TileDetail.Secrets)</strong>
                </div>
                <div class="col-md-2 border-bottom mb-1 pb-1">
                    @Html.DisplayFor(x => x.Tile.TileDetail.Secrets)
                </div>
                <div class="col-md-2 border-bottom mb-1 pb-1">
                    <strong>@Html.DisplayNameFor(x => x.Tile.TileDetail.LootRooms)</strong>
                </div>
                <div class="col-md-2 border-bottom mb-1 pb-1">
                    @Html.DisplayFor(x => x.Tile.TileDetail.LootRooms)
                </div>
                <div class="col-md-2 border-bottom mb-1 pb-1">
                    <strong>@Html.DisplayNameFor(x => x.Tile.TileDetail.Hazards)</strong>
                </div>
                <div class="col-md-2 border-bottom mb-1 pb-1">
                    @Html.DisplayFor(x => x.Tile.TileDetail.Hazards)
                </div>
            </div>

            <div class="row">
                <div class="col-md-12  mb-1 pb-1">
                    <strong>@Html.DisplayNameFor(x => x.Tile.TileDetail.Description)</strong>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12  mb-1 pb-1">
                    @Html.DisplayFor(x => x.Tile.TileDetail.Description)
                </div>
            </div>

            <div class="row">

                <div class="col-md-4 mb-1 pb-1">
                    <div class="row">
                        <div class="col-md-12">
                            <strong>@Html.DisplayNameFor(x => x.Tile.TileDetail.SecretDescription)</strong>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            @Html.DisplayFor(x => x.Tile.TileDetail.SecretDescription)
                        </div>
                    </div>
                </div>
                <div class="col-md-4 mb-1 pb-1">
                    <div class="row">
                        <div class="col-md-12">
                            <strong>@Html.DisplayNameFor(x => x.Tile.TileDetail.HazardDescription)</strong>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            @Html.DisplayFor(x => x.Tile.TileDetail.HazardDescription)
                        </div>
                    </div>
                </div>
                <div class="col-md-4 mb-1 pb-1">
                    <div class="row">
                        <div class="col-md-12">
                            <strong>@Html.DisplayNameFor(x => x.Tile.TileDetail.BehindName)</strong>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            @Html.DisplayFor(x => x.Tile.TileDetail.BehindName)
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="row">

                <div class="col-md-12  mb-1 pb-1">
                    <strong>Potential Mission Objectives in this Tile:</strong>
                </div>
            </div>
            <div class="row ">
                <div class="col-md-12 mb-1 pb-1 text-center ">
                    <div class="d-flex justify-content-center flex-wrap">
                        @if (Model.Tile.TileDetail.PlayerSpawn)
                        {
                            <span class="d-sm-inline-flex m-1 p-1 bg-light text-dark text-wrap font-weight-bold rounded-lg tooltips" data-toggle="tooltip" data-placement="top" title="This tile is a potential Spawn point.">
                                Potential Spawn
                            </span>
                        }
                        @if (Model.Tile.TileDetail.PlayerExtract)
                        {
                            <span class="d-sm-inline-flex m-1 p-1 bg-success text-light text-wrap font-weight-bold rounded-lg tooltips" data-toggle="tooltip" data-placement="top" title="This tile is an Extraction point.">
                                Extraction Point
                            </span>
                        }
                        @if (Model.Tile.TileDetail.MobileDefense)
                        {
                            <span class="d-sm-inline-flex m-1 p-1 bg-warning text-dark text-wrap font-weight-bold rounded-lg tooltips" data-toggle="tooltip" data-placement="top" title="This tile may contain a Mobile Defense objective point.">
                                Mobile Defense
                            </span>

                        }
                        @if (Model.Tile.TileDetail.DefectionSpawn)
                        {
                            <span class="d-sm-inline-flex m-1 p-1 bg-primary text-light text-wrap font-weight-bold rounded-lg tooltips" data-toggle="tooltip" data-placement="top" title="This tile is a place where Defectors may spawn.">
                                Defectors Spawn
                            </span>
                        }
                        @if (Model.Tile.TileDetail.DefectionRest)
                        {
                            <span class="d-sm-inline-flex m-1 p-1 bg-info text-dark text-wrap font-weight-bold rounded-lg tooltips" data-toggle="tooltip" data-placement="top" title="This tile is a potential place for Defection Life Support Pylons.">
                                Defection Support
                            </span>
                        }
                        @if (Model.Tile.TileDetail.SurvivalPylon)
                        {
                            <span class="d-sm-inline-flex m-1 p-1 bg-warning text-muted text-wrap font-weight-bold rounded-lg tooltips" data-toggle="tooltip" data-placement="top" title="This tile is a potential place for Survival Life Support Pylons.">
                                Life Support Pylon
                            </span>
                        }
                    </div>

                </div>


            </div>
        </div>
        <div class="col-md-4">
            <div class="row">
                <div class="col-md-12 mb-1 pb-1">
                    <strong>Potential Collectibles and Spawn Points:</strong>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="d-flex justify-content-center flex-wrap">
                        @if (Model.Tile.TileDetail.CaptureSpawn)
                        {
                            <img src="~/img/markers/capturespawn.png" style="width:25px" alt="Capture Spawn" CssClass="tooltips" data-toggle="tooltip" data-placement="top" title="Capture Target Spawn Tile">
                        }
                        @if (Model.Tile.TileDetail.SimarisSpawn)
                        {
                            <img src="~/img/markers/simarisspawn.png" style="width:25px" alt="Simaris Spawn" CssClass="tooltips" data-toggle="tooltip" data-placement="top" title="Simaris Scan Spawn Tile">

                        }
                        @if (Model.Tile.TileDetail.Cache)
                        {
                            <img src="~/img/markers/cachemarker.png" style="width:25px" alt="Cache Location" CssClass="tooltips" data-toggle="tooltip" data-placement="top" title="Cache Location">

                        }
                        @if (Model.Tile.TileDetail.Cephalon)
                        {
                            <img src="~/img/markers/cephalon.png" style="width:25px" alt="Cephalon Fragment" CssClass="tooltips" data-toggle="tooltip" data-placement="top" title="Cephalon Fragment">

                        }
                        @if (Model.Tile.TileDetail.Somachord)
                        {
                            <img src="~/img/markers/somachord.png" style="width:25px" alt="Somachord Fragment" CssClass="tooltips" data-toggle="tooltip" data-placement="top" title="Somachord Fragment">

                        }
                        @if (Model.Tile.TileDetail.FrameFighter)
                        {
                            <img src="~/img/markers/framefighter.png" style="width:25px" alt="Frame Fighter Fragment" CssClass="tooltips" data-toggle="tooltip" data-placement="top" title="Frame Fighter Fragment">

                        }
                        @if (Model.Tile.TileDetail.Ayatan)
                        {
                            <img src="~/img/markers/ayatanstatue.png" style="width:25px" alt="Ayatan Statue" CssClass="tooltips" data-toggle="tooltip" data-placement="top" title="Ayatan Statue">

                        }
                        @if (Model.Tile.TileDetail.Medallion)
                        {
                            <img src="~/img/markers/syndicatemedallion.png" style="width:25px" alt="Syndicate Medallion" CssClass="tooltips" data-toggle="tooltip" data-placement="top" title="Syndicate Medallion">

                        }
                        @if (Model.Tile.TileDetail.RareContainer)
                        {
                            <img src="~/img/markers/lootmarker.png" style="width:25px" alt="Rare Loot Chest" CssClass="tooltips" data-toggle="tooltip" data-placement="top" title="Rare Loot Chest">

                        }

                    </div>

                </div>



            </div>
        </div>

        <div class="col-md-4">
            <div class="row">
                <div class="col-md-12 mb-1 pb-1">
                    <strong>Variant Tiles:</strong>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div id="variants" class="d-flex align-items-start flex-column">

                        @foreach (var variant in Model.Variants)
                        {
                            @Html.ActionLink(variant.VariantTileName, "ViewTile", "Tile", new { tileset = variant.TilesetPath, tilename = variant.TilePath})
                        }

                    </div>

                </div>



            </div>
        </div>

    </div>

    
    

    <div class="row">

        <div class="col-md-12">

            <div class="row">
                <div class="col-mid-12 pb-1 mb-1 mt-2">
                    <div id="uploadedImagesCarousel" class="carousel slide" data-ride="carousel">
                        <ol class="carousel-indicators">
                            <li data-target="#uploadedImagesCarousel" data-slide-to="0" class="active"></li>
                            @for (int x = 1; x < Model.Images.Count(); x++)
                            {
                                <li data-target="#uploadedImagesCarousel" data-slide-to="@x" class="active"></li>
                            }
                        </ol>
                        <div class="carousel-inner">
                            @foreach (var picture in Model.Images)
                            {
                                if (Model.Images.First() == picture)
                                {
                                    <div class="carousel-item active">
                                        <img class="d-block w-100" src="@Url.Content(String.Format("~/img/tilesets/{0}", picture.ImagePath))" alt="@picture.AltText">
                                        <div class="carousel-caption d-none d-md-block">
                                            <h2>@Html.DisplayFor(x => picture.ViewName)</h2>
                                            
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="carousel-item">
                                        <img class="d-block w-100" src="@Url.Content(String.Format("~/img/tilesets/{0}", picture.ImagePath))" alt="@picture.AltText">
                                        <div class="carousel-caption d-none d-md-block">
                                            <h2>@Html.DisplayFor(x => picture.ViewName)</h2>
                                            
                                        </div>
                                    </div>

                                }


                            }

                        </div>
                        <a class="carousel-control-prev" href="#uploadedImagesCarousel" role="button" data-slide="prev">
                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                            <span class="sr-only">Previous</span>
                        </a>
                        <a class="carousel-control-next" href="#uploadedImagesCarousel" role="button" data-slide="next">
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                            <span class="sr-only">Next</span>
                        </a>



                    </div>


                </div>
            </div>

        </div>

    </div>

</div>

