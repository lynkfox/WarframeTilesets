@model WFTileCounter.ModelsView.TileDetailsViewModel
@{int variantCount = Model.Variants.Count(); }
@{
    ViewData["Title"] = "Edit Tile";
}









<h1>Edit Tile Information</h1>

<div>
    <h4>Editing Tile Information for @Html.DisplayFor(x => x.Tile.Name)</h4>
    <hr />
</div>

<form asp-controller="Tile" asp-action="Update" method="post" enctype="multipart/form-data">

    <input name="__RequestVerificationToken" type="hidden" value="<random-looking-value=here>" />

    <div class="container">
        <div class="row">
            <div class="col-md-4">
                @if (Model.MapImages.Count() == 1)
                        {
                            var picture = Model.MapImages.First();

                    <img src="@Url.Content(String.Format("~/img/tilesets/{0}", picture.ImagePath))" alt="@picture.AltText" CssClass="tooltips" class="rounded d-block w-100 tooltips" data-toggle="tooltip" data-placement="top" title="@Html.DisplayFor(x=>picture.AltText)">
                }
                else
                {
                    <div id="mapImagesCarousel" class="carousel slide" data-ride="carousel">


                        <div class="carousel-inner" role="listbox">
                            @foreach (var picture in Model.MapImages)
                            {
                                if (Model.MapImages.First() == picture)
                                {
                                    <div class="carousel-item active">
                                        <img src="@Url.Content(String.Format("~/img/tilesets/{0}", picture.ImagePath))" alt="@picture.AltText" CssClass="tooltips" class="rounded d-block w-100 tooltips" data-toggle="tooltip" data-placement="top" title="@Html.DisplayFor(x=>picture.AltText)">

                                    </div>
                                }
                                else
                                {
                                    <div class="carousel-item">
                                        <img src="@Url.Content(String.Format("~/img/tilesets/{0}", picture.ImagePath))" alt="@picture.AltText" CssClass="tooltips" class="rounded d-block w-100 tooltips" data-toggle="tooltip" data-placement="top" title="@Html.DisplayFor(x=>picture.AltText) of @Model.Tile.Name">

                                    </div>

                                }


                            }

                        </div>
                        <a class="carousel-control-prev" href="#mapImagesCarousel" role="button" data-slide="prev">
                            <span class="carousel-control-prev-icon mapPrev" aria-hidden="true"></span>
                            <span class="sr-only text-dark">Previous</span>
                        </a>
                        <a class="carousel-control-next" href="#mapImagesCarousel" role="button" data-slide="next">
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                            <span class="sr-only text-dark">Next</span>
                        </a>



                    </div>
                }

            </div>
            

            

            <div class="col-md-8 border border-light">
                <div class="row">
                    <div class="col-md-6 mb-1 pb-1">
                        <div class="row">
                            <div class="col-md-12 mb-1 pb-1 ">
                                <strong>@Html.DisplayNameFor(x => x.Tile.Name)</strong>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12 mb-1 pb-1 border-bottom border-light">
                                @Html.TextBoxFor(x => x.Tile.Name, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>

                    </div>
                    <div class="col-md-6 mb-1 pb-1">
                        <div class="row">
                            <div class="col-md-12 mb-1 pb-1">
                                <strong>@Html.DisplayNameFor(x => x.Tile.TileDetail.PopularName)</strong>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12 mb-1 pb-1 border-bottom border-light">
                                @Html.TextBoxFor(x => x.Tile.TileDetail.PopularName, new { @class = "form-control" })
                            </div>
                        </div>

                    </div>
                </div>


                <div class="row">
                    <div class="col-md-2 border-bottom mb-1 pb-1">
                        <strong>@Html.DisplayNameFor(x => x.Tile.TileDetail.Consoles)</strong>
                    </div>
                    <div class="col-md-2 border-bottom mb-1 pb-1">
                        @Html.DropDownListFor(x => x.Tile.TileDetail.Consoles, Model.Numbers, new { @class = "form-control" })
                    </div>
                    <div class="col-md-2 border-bottom mb-1 pb-1">
                        <strong>@Html.DisplayNameFor(x => x.Tile.TileDetail.Exits)</strong>
                    </div>
                    <div class="col-md-2 border-bottom mb-1 pb-1">
                        @Html.DropDownListFor(x => x.Tile.TileDetail.Exits, Model.Numbers, new { @class = "form-control" })
                    </div>
                    <div class="col-md-2 border-bottom mb-1 pb-1">
                        <strong>@Html.DisplayNameFor(x => x.Tile.TileDetail.Lockers)</strong>
                    </div>
                    <div class="col-md-2 border-bottom mb-1 pb-1">
                        @Html.DropDownListFor(x => x.Tile.TileDetail.Lockers, Model.Numbers, new { @class = "form-control" })
                    </div>

                </div>
                <div class="row">
                    <div class="col-md-2 border-bottom mb-1 pb-1">
                        <strong>@Html.DisplayNameFor(x => x.Tile.TileDetail.Secrets)</strong>
                    </div>
                    <div class="col-md-2 border-bottom mb-1 pb-1">
                        @Html.DropDownListFor(x => x.Tile.TileDetail.Secrets, Model.Numbers, new { @class = "form-control" })
                    </div>
                    <div class="col-md-2 border-bottom mb-1 pb-1">
                        <strong>@Html.DisplayNameFor(x => x.Tile.TileDetail.LootRooms)</strong>
                    </div>
                    <div class="col-md-2 border-bottom mb-1 pb-1">
                        @Html.DropDownListFor(x => x.Tile.TileDetail.LootRooms, Model.Numbers, new { @class = "form-control" })
                    </div>
                    <div class="col-md-2 border-bottom mb-1 pb-1">
                        <strong>@Html.DisplayNameFor(x => x.Tile.TileDetail.Hazards)</strong>
                    </div>
                    <div class="col-md-2 border-bottom mb-1 pb-1">
                        @Html.DropDownListFor(x => x.Tile.TileDetail.Hazards, Model.Numbers, new { @class = "form-control" })
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12  mb-1 pb-1">
                        <strong>@Html.DisplayNameFor(x => x.Tile.TileDetail.Description)</strong>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12  mb-1 pb-1">
                        @Html.TextAreaFor(x => x.Tile.TileDetail.Description, new { @class = "form-control" })
                    </div>
                </div>

            </div>
        </div>

        <div class="row">

            <div class="col-md-4 mb-1 pb-1">
                <div class="row">
                    <div class="col-md-12">
                        <strong>@Html.DisplayNameFor(x => x.Tile.TileDetail.SecretDescription)</strong>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        @Html.TextAreaFor(x => x.Tile.TileDetail.SecretDescription, new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="col-md-4 mb-1 pb-1">
                <div class="row">
                    <div class="col-md-12">
                        <strong>@Html.DisplayNameFor(x => x.Tile.TileDetail.HazardDescription)</strong>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        @Html.TextAreaFor(x => x.Tile.TileDetail.HazardDescription, new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="col-md-4 mb-1 pb-1">
                <div class="row">
                    <div class="col-md-12">
                        <strong>@Html.DisplayNameFor(x => x.Tile.TileDetail.BehindName)</strong>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        @Html.TextAreaFor(x => x.Tile.TileDetail.BehindName, new { @class = "form-control" })
                    </div>
                </div>
            </div>


        </div>
        <div class="row">
            <div class="col-md-4 border-light border mb-1 pb-1">
                <div class="row">
                    <div class="col-md-12 mb-1 pb-1">
                        <strong>Potential Mission Objectives in this Tile:</strong>
                    </div>

                </div>
                <div id="objectives" class="d-flex justify-content-center flex-wrap">
                    <div class="blueCheckbox d-inline-flex m-1 p-1 rounded @(Model.Tile.TileDetail.PlayerSpawn ? "border-info" : "border-light") border bg-dark">
                        <span><label asp-for="Tile.TileDetail.PlayerSpawn"></label> <input type="checkbox" asp-for="Tile.TileDetail.PlayerSpawn" /></span>
                    </div>

                    <div class="blueCheckbox d-inline-flex m-1  p-1 rounded @(Model.Tile.TileDetail.PlayerExtract ? "border-info" : "border-light") border bg-dark">
                        <span><label asp-for="Tile.TileDetail.PlayerExtract"></label> <input type="checkbox" asp-for="Tile.TileDetail.PlayerExtract" /></span>
                    </div>

                    <div class="blueCheckbox d-inline-flex m-1  p-1 rounded @(Model.Tile.TileDetail.DefectionSpawn ? "border-info" : "border-light") border bg-dark">
                        <span><label asp-for="Tile.TileDetail.DefectionSpawn"></label>  <input type="checkbox" asp-for="Tile.TileDetail.DefectionSpawn" /></span>
                    </div>
                    <div class="blueCheckbox d-inline-flex m-1  p-1 rounded @(Model.Tile.TileDetail.DefectionRest ? "border-info" : "border-light") border bg-dark">
                        <span><label asp-for="Tile.TileDetail.DefectionRest"></label> <input type="checkbox" asp-for="Tile.TileDetail.DefectionRest" /></span>
                    </div>
                    <div class="blueCheckbox d-inline-flex m-1  p-1 rounded @(Model.Tile.TileDetail.SurvivalPylon ? "border-info" : "border-light") border bg-dark">
                        <span><label asp-for="Tile.TileDetail.SurvivalPylon"></label> <input type="checkbox" asp-for="Tile.TileDetail.SurvivalPylon" /></span>
                    </div>
                    <div class="blueCheckbox d-inline-flex m-1  p-1 rounded @(Model.Tile.TileDetail.MobileDefense ? "border-info" : "border-light") border bg-dark">
                        <span><label asp-for="Tile.TileDetail.MobileDefense"></label> <input type="checkbox" asp-for="Tile.TileDetail.MobileDefense" /></span>
                    </div>
                    <div class="blueCheckbox d-inline-flex m-1  p-1 rounded @(Model.Tile.TileDetail.KuvaSiphon ? "border-info" : "border-light") border bg-dark">
                        <span><label asp-for="Tile.TileDetail.KuvaSiphon"></label> <input type="checkbox" asp-for="Tile.TileDetail.KuvaSiphon" /></span>
                    </div>

                </div>
            </div>

            <div class="col-md-4 border-light border mb-1 pb-1">
                <div class="row">
                    <div class="col-md-12 mb-1 pb-1">
                        <strong>Potential Collectibles and Spawn Points in this Tile:</strong>
                    </div>

                </div>
                <div id="collectibles" class="d-flex justify-content-center flex-wrap">
                    <div class="blueCheckbox d-inline-flex m-1 p-1 rounded @(Model.Tile.TileDetail.CaptureSpawn ? "border-info" : "border-light") border bg-dark">
                        <span><label asp-for="Tile.TileDetail.CaptureSpawn"><img src="~/img/markers/capturespawn.png" style="width:25px" alt="Capture Spawn" class="mr-1" CssClass="tooltips" data-toggle="tooltip" data-placement="top" title="Capture Target Spawn Tile"></label><input type="checkbox" asp-for="Tile.TileDetail.CaptureSpawn" /></span>
                    </div>

                    <div class="blueCheckbox d-inline-flex m-1  p-1 rounded @(Model.Tile.TileDetail.SimarisSpawn ? "border-info" : "border-light") border bg-dark">
                        <span><label asp-for="Tile.TileDetail.SimarisSpawn"><img src="~/img/markers/simarisspawn.png" style="width:25px" alt="Simaris Spawn" class="mr-1" CssClass="tooltips" data-toggle="tooltip" data-placement="top" title="Simaris Scan Spawn Tile"> </label><input type="checkbox" asp-for="Tile.TileDetail.SimarisSpawn" /></span>
                    </div>
                    <div class="blueCheckbox d-inline-flex m-1  p-1 rounded @(Model.Tile.TileDetail.Cache ? "border-info" : "border-light") border bg-dark">
                        <span><label asp-for="Tile.TileDetail.Cache"><img src="~/img/markers/cachemarker.png" style="width:25px" alt="Cache Location" class="mr-1" CssClass="tooltips" data-toggle="tooltip" data-placement="top" title="Cache Location"> </label><input type="checkbox" asp-for="Tile.TileDetail.Cache" /></span>
                    </div>
                    <div class="blueCheckbox d-inline-flex m-1  p-1 rounded @(Model.Tile.TileDetail.Cephalon ? "border-info" : "border-light") border bg-dark">
                        <span><label asp-for="Tile.TileDetail.Cephalon"><img src="~/img/markers/cephalon.png" style="width:25px" alt="Cephalon Fragment" class="mr-1" CssClass="tooltips" data-toggle="tooltip" data-placement="top" title="Cephalon Fragment"> </label><input type="checkbox" asp-for="Tile.TileDetail.Cephalon" /></span>
                    </div>
                    <div class="blueCheckbox d-inline-flex m-1  p-1 rounded @(Model.Tile.TileDetail.Somachord ? "border-info" : "border-light") border bg-dark">
                        <span><label asp-for="Tile.TileDetail.Somachord"><img src="~/img/markers/somachord.png" style="width:25px" alt="Somachord Fragment" class="mr-1" CssClass="tooltips" data-toggle="tooltip" data-placement="top" title="Somachord Fragment"> </label><input type="checkbox" asp-for="Tile.TileDetail.Somachord" /></span>
                    </div>
                    <div class="blueCheckbox d-inline-flex m-1  p-1 rounded @(Model.Tile.TileDetail.FrameFighter ? "border-info" : "border-light") border bg-dark">
                        <span><label asp-for="Tile.TileDetail.FrameFighter"><img src="~/img/markers/framefighter.png" style="width:25px" alt="Frame Fighter Fragment" class="mr-1" CssClass="tooltips" data-toggle="tooltip" data-placement="top" title="Frame Fighter Fragment"> </label><input type="checkbox" asp-for="Tile.TileDetail.FrameFighter" /></span>
                    </div>
                    <div class="blueCheckbox d-inline-flex m-1  p-1 rounded @(Model.Tile.TileDetail.Ayatan ? "border-info" : "border-light") border bg-dark">
                        <span><label asp-for="Tile.TileDetail.Ayatan"><img src="~/img/markers/ayatanstatue.png" style="width:25px" alt="Ayatan Statue" class="mr-1" CssClass="tooltips" data-toggle="tooltip" data-placement="top" title="Ayatan Statue"> </label><input type="checkbox" asp-for="Tile.TileDetail.Ayatan" /></span>
                    </div>
                    <div class="blueCheckbox d-inline-flex m-1  p-1 rounded @(Model.Tile.TileDetail.Medallion ? "border-info" : "border-light") border bg-dark">
                        <span><label asp-for="Tile.TileDetail.Medallion"><img src="~/img/markers/syndicatemedallion.png" style="width:25px" alt="Syndicate Medallion" class="mr-1" CssClass="tooltips" data-toggle="tooltip" data-placement="top" title="Syndicate Medallion"> </label><input type="checkbox" asp-for="Tile.TileDetail.Medallion" /></span>
                    </div>
                    <div class="blueCheckbox d-inline-flex m-1  p-1 rounded @(Model.Tile.TileDetail.RareContainer ? "border-info" : "border-light") border bg-dark">
                        <span><label asp-for="Tile.TileDetail.RareContainer"><img src="~/img/markers/lootmarker.png" style="width:25px" alt="Rare Loot Chest" class="mr-1" CssClass="tooltips" data-toggle="tooltip" data-placement="top" title="Rare Loot Chest"> </label><input type="checkbox" asp-for="Tile.TileDetail.RareContainer" /></span>
                    </div>
                    <div class="blueCheckbox d-inline-flex m-1  p-1 rounded @(Model.Tile.TileDetail.Kuria ? "border-info" : "border-light") border bg-dark">
                        <span><label asp-for="Tile.TileDetail.Kuria"><img src="~/img/markers/kuriamarker.png" style="width:25px" alt="Kuria" class="mr-1" CssClass="tooltips" data-toggle="tooltip" data-placement="top" title="Kuria"></label><input type="checkbox" asp-for="Tile.TileDetail.Kuria" /></span>
                    </div>

                </div>
            </div>
            <div class="col-md-4 border-light border mb-1 pb-1">
                <div class="row">
                    <div class="col-md-12 mb-1 pb-1">
                        <strong>Variant Tile Names (TilesetTileName format):</strong>
                    </div>

                </div>
                <div id="variants" class="d-flex align-items-start flex-column">

                    @Html.EditorFor(x => x.Variants)

                </div>
            </div>

        </div>



        <div class="row">

            <div class="col-md-12">
                <div class="row">
                    <div class="col-mid-12 pb-1 mb-1">
                        <strong>Images Currently Uploaded of Tile</strong>
                    </div>
                </div>
                <div class="row">
                    <div class="col-mid-12 pb-1 mb-1">
                        <div id="uploadedImagesCarousel" class="carousel slide" data-ride="carousel">
                            <ol class="carousel-indicators">
                                <li data-target="#uploadedImagesCarousel" data-slide-to="0" class="active"></li>
                                @for (int x = 1; x < Model.Images.Count(); x++)
                                {
                                    <li data-target="#uploadedImagesCarousel" data-slide-to="@x" class="active"></li>
                                }
                            </ol>
                            <div class="carousel-inner">
                                @foreach (var picture in Model.Images)
                                {
                                    if (Model.Images.First() == picture)
                                    {
                                        <div class="carousel-item active">
                                            <img class="d-block w-100" src="@Url.Content(String.Format("~/img/tilesets/{0}", picture.ImagePath))" alt="@picture.AltText">
                                            <div class="carousel-caption d-none d-md-block">
                                                <h2>@Html.DisplayFor(x => picture.ViewName)</h2>
                                                <p><i>@Html.DisplayFor(x => picture.ImageName)</i></p>
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="carousel-item">
                                            <img class="d-block w-100" src="@Url.Content(String.Format("~/img/tilesets/{0}", picture.ImagePath))" alt="@picture.AltText">
                                            <div class="carousel-caption d-none d-md-block">
                                                <h2>@Html.DisplayFor(x => picture.ViewName)</h2>
                                                <p><i>@Html.DisplayFor(x => picture.ImageName)</i></p>
                                            </div>
                                        </div>

                                    }


                                }

                            </div>
                            <a class="carousel-control-prev" href="#uploadedImagesCarousel" role="button" data-slide="prev">
                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                <span class="sr-only">Previous</span>
                            </a>
                            <a class="carousel-control-next" href="#uploadedImagesCarousel" role="button" data-slide="next">
                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                <span class="sr-only">Next</span>
                            </a>



                        </div>


                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12 mb-1 pb-1 mt-1 pt-1  align-items-center">
                        <strong>Upload new Images: </strong><br />
                        @Html.TextBoxFor(model => model.ImageFiles, new { type = "file", multiple = "", @id = "filesToUpload", @onchange = "makeFileList();" })

                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 mb-1 pb-1  align-items-center">
                        <ul id="fileList" class="list-group list-group-horizontal"></ul>
                    </div>
                </div>
            </div>

        </div>





    </div>


    <br />


    <input type="submit" value="Update Tile" id="btnSubmit" />
    <hr />
</form>

